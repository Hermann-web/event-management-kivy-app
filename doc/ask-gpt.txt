look at my kivy project 

##main.py
'''
# main.py
from kivymd.app import MDApp
from kivy.uix.screenmanager import ScreenManager, SlideTransition

from list_screen import ListScreen
from login_screen import LoginScreen
from config import screen_login_str, screen_list_participants_str

class RootScreenManager(ScreenManager):
    def switch_screen(self, screen_name):
        if screen_name == screen_login_str:
            direction = 'right'
        elif screen_name == screen_list_participants_str:
            direction = 'left'
        else:
            direction = 'down'
        self.transition = SlideTransition(direction=direction)
        self.current = screen_name

'''class CustomSlideTransition(SlideTransition):
    def get_direction(self, screen_manager, screen1, screen2):
        print(screen_manager.current, screen1, screen2)
        if screen_manager.current == screen_login_str:
            print("going num again !")
            return 'right'
        return 'left'
        
class RootScreenManager(ScreenManager):
    def switch_screen(self, screen_name):
        self.current = screen_name
'''

class UserListApp(MDApp):
    def build(self):
        # Create a screen manager
        self.theme_cls.theme_style = "Dark"
        # sm = RootScreenManager(transition=CustomSlideTransition())
        # sm = ScreenManager()
        # Add the screens to the manager and set the initial screen
        sm = RootScreenManager()

        sm.add_widget(LoginScreen(name=screen_login_str))
        sm.add_widget(ListScreen(name=screen_list_participants_str))
        sm.current = screen_login_str
        self.sm = sm
        return sm
    
    def to_login_screen(self):
        self.sm.switch_screen(screen_login_str)
    def to_users_list_screen(self):
        self.sm.switch_screen(screen_list_participants_str)



if __name__ == '__main__':
    UserListApp().run()




'''

##login_screen.py
'''
# login_screen.py
from kivy.uix.screenmanager import Screen
from kivy.properties import ObjectProperty
from config import screen_login_str, screen_list_participants_str
from kivy.lang import Builder

Builder.load_file('login_screen.kv')

class LoginScreen(Screen):
    def __init__(self, **kwargs):
        super(LoginScreen, self).__init__(**kwargs)

    username_field = ObjectProperty(None)
    password_field = ObjectProperty(None)

    def login(self, username, password):
        # TODO: Add login logic here

        # If login is successful, switch to ListScreen
        self.manager.switch_screen(screen_list_participants_str)
'''

##login_screen.kv
'''
<LoginScreen>:
    BoxLayout:
        orientation: 'vertical'
        size_hint: None, None
        size: root.width * 0.8, root.height * 0.8 #dp(300), dp(400)
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        #padding: dp(10)
        #spacing: dp(10)
        canvas.before:
            Color:
                rgba: 0.2, 0.2, 0.2, 1
            Rectangle:
                pos: self.pos[0], self.pos[1]
                size: self.size
        
        BoxLayout:
            orientation: 'vertical'
            size_hint_y: None
            height: self.minimum_height
            width: dp(root.width * 0.8)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            #padding: dp(100)
            
            Label:
                text: 'Login Here'
                font_size: dp(24)
                color: 0, 1, 1, 1
                pos_hint: {'center_x':0.5, 'center_y':0.5}
        
        BoxLayout:
            orientation: 'vertical'
            size_hint_y: None
            height: dp(root.height * 0.5)
            width: dp(root.width * 0.8)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            padding: dp(100)
        
            MDTextField:
                id: username_field
                hint_text: "Username"
                pos_hint: {'center_x':0.5, 'center_y':0.6}
            MDTextField:
                id: password_field
                hint_text: "Password"
                password: True
                pos_hint: {'center_x':0.5, 'center_y':0.5}

        BoxLayout:
            orientation: 'vertical'
            size_hint_y: None
            height: self.minimum_height
            width: dp(root.width * 0.8)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            #padding: dp(100)
            
            MDRaisedButton:
                text: 'Login'
                size_hint_x: None
                width: dp(100)
                on_release:
                    root.login(username_field.text, password_field.text)
                md_bg_color: app.theme_cls.accent_color
                text_color: 1, 1, 1, 1
                pos_hint: {'center_x': 0.5}

'''

##list_screen.py
'''
from kivy.uix.screenmanager import Screen
from kivymd.uix.list import MDList, TwoLineListItem, ImageLeftWidget
from kivy.lang import Builder
from config import screen_login_str, screen_list_participants_str

Builder.load_file('list_screen.kv')


class ListScreen(Screen):
    def __init__(self, **kwargs):
        super(ListScreen, self).__init__(**kwargs)
    
    def on_pre_enter(self, *args):
        self.ids.user_list.clear_widgets()
        users = [{'firstname': 'John', 'surname': 'Doe', 'cin': '1234567890', 'role': 'Manager', 'firm': 'ACME Inc.'},
                 {'firstname': 'Jane', 'surname': 'Doe', 'cin': '0987654321', 'role': 'Employee', 'firm': 'ACME Inc.'},
                 {'firstname': 'Bob', 'surname': 'Smith', 'cin': '1357908642', 'role': 'Employee', 'firm': 'XYZ Corp'}]
        for user in users:
            user_item = TwoLineListItem(text=user['firstname'] + " " + user['surname'],
                                        secondary_text=f"[color=0000ff][b]CIN:[/b] {user['cin']}\n"
                                                       f"[color=00ff00][b]Firm:[/b][/color] {user['firm']}\n"
                                                       f"[color=ff0000][b]Role:[/b][/color] {user['role']}",
                                        #markup=True
                                        )
            self.ids.user_list.add_widget(user_item)

    

    
'''

##list_screen.kv
'''
<ListScreen>:
    BoxLayout:
        orientation: 'vertical'
        size_hint: None, None
        size: root.width * 0.8, root.height * 0.8 #dp(300), dp(400)
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        #padding: dp(10)
        #spacing: dp(10)
        canvas.before:
            Color:
                rgba: 0.2, 0.2, 0.2, 1
            Rectangle:
                pos: self.pos[0], self.pos[1] 
                size: self.size
        
        BoxLayout:
            orientation: 'vertical'
            size_hint_y: None
            height: self.minimum_height
            width: dp(root.width * 0.8)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            #padding: dp(100)
            
            Label:
                text: 'Participants'
                font_size: dp(24)
                color: 0, 1, 1, 1
                pos_hint: {'center_x':0.5, 'center_y':0.5}

        ScrollView:
            MDList:
                id: user_list
                theme_text_color: "Custom"
                text_color: 1, 1, 1, 1

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: self.minimum_height
            width: dp(root.width * 0.5)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            padding: dp(5)
            
            MDFloatingActionButton:
                icon: 'plus'
                md_bg_color: app.theme_cls.accent_color
                pos_hint: {'center_x': .5, 'center_y': .5}
                on_press: app.add_user_dialog()
            
            MDFloatingActionButton:
                icon: 'plus'
                md_bg_color: app.theme_cls.accent_color
                pos_hint: {'center_x': .5, 'center_y': .5}
                on_press: app.to_login_screen()

'''
